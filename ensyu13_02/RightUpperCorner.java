/*-
 * 『明解Java入門編』柴田望洋
 *
 * 問題:演習13_02 P.443
 * 	図形クラス群に対して、直角三角形を表すクラス群を追加せよ。
 *  左下が直角、左上が直角、右下が直角、右上が直角のものを追加すること。
 *  直角二等辺三角形を表す抽象クラスを作り、そこから個々のクラスを派生して作ること。
 *  
 * 回答:
 *  下記のプログラムをご参照ください。
 *  
 * パッケージ名:ensyu13_02
 * クラス名: RightUpperCorner //右上が直角
 * 作成日:2022/12/15
 * 作成者:HinaSato
 * 修正日:
 * 修正者:
 * ver:1.0.0
 */

package workspace0.chapter13_archive.ensyu13_02;

//右上が直角
public class RightUpperCorner extends IsoscelesTriangle {
	
	//何段にしたいかという変数（フィールド）を宣言
	private int upperRight;
	
	// - - - コンストラクタ
	public RightUpperCorner(int upperRight) {
		//仮引数で初期化
		this.upperRight = upperRight;
	}

	// - - - メソッド
	//非抽象メソッド。図形の説明を書く
	public String toString() {
		//右上直角の三角形を表示する旨
		return "右上直角の三角形を表示します。";
	};	

	//右上直角の三角形を表示するメソッド_同パッケージからアクセスできれば良いためデフォルトアクセスでよい
	//親のdrawメソッドを継承し、非抽象にオーバーライド
	@Override void draw() {
	
		// * 入力のループで、ループ繰り返しの可否判定に使用する値を
		//変数uとおく
		int u;

		//スペース入力のループで、ループ繰り返しの可否判定に使用する値を
		//変数tとおく。
		int t;

		//改行のためのループを作成
		//改行するかどうかの判定に使用し、いま何行目かを表す値を変数sとおく
		//つまり改行する場合は、改行したのち、次の行で、 * を正しく配置する下準備（スペース入力）をするループ。
		//つまりループのたびに、いま何行目かを表すsを1インクリメント。
		for(int s = 1; s <= upperRight; s++) {

			//スペース入力のためのループを作成。
			//スペース入力を(s-1)回繰り返すため、tの初期値は(s - 1)とし、0より大きい場合にこのループへ入る。
			//最外のループのたびに、その行に表示するスペース（を入力するループ回数）は1つ増える。
			//※sが最外のループごとに増えるので、表示する * 自体は、
			//  tをこのループごとにデクリメントするだけで、増やせる。
			//  tのデクリメントはあくまでもこのループを脱するまでの処理
			for(t = s - 1; t > 0 ; t--) {
				System.out.print(' ');
			}

			// * 入力のためのループを作成。
			//uの初期値はupperRightとし、
			//このループのたびにデクリメントする。
			for(u = upperRight - s; u >= 0; u--) {
			//u > 0 が true の場合に * を入力
				System.out.print('*');
			}

			//改行する
			System.out.println();
		}
	}
}